package com.maxim.pos.common.config;

import java.util.Properties;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.BeansException;
import org.springframework.beans.factory.BeanInitializationException;
import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;
import org.springframework.beans.factory.config.PropertyPlaceholderConfigurer;

import com.maxim.util.EncryptionUtil;

public class EncryptablePropertyPlaceholderConfigurer extends PropertyPlaceholderConfigurer {

    public static final Logger logger = LoggerFactory.getLogger(EncryptablePropertyPlaceholderConfigurer.class);

    private static final String AESKEY_KEY = "aesKey";
    private static final String JDBC_PASSWORD_KEY = "connection.password";

    protected void processProperties(ConfigurableListableBeanFactory beanFactory, Properties props)
            throws BeansException {
        try {
            String aesKey = props.getProperty(AESKEY_KEY);

            logger.info("onSetup aesKey is {}", aesKey);

            String jdbc_password_key = props.getProperty(JDBC_PASSWORD_KEY);

            if (jdbc_password_key != null) {
                props.setProperty(JDBC_PASSWORD_KEY, EncryptionUtil.decrypt(jdbc_password_key, aesKey));
            }

            super.processProperties(beanFactory, props);
        } catch (Exception e) {
            e.printStackTrace();
            throw new BeanInitializationException(e.getMessage());
        }
    }
}