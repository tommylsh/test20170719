<?xml version="1.0" encoding="UTF-8"?>

<queries>

	<findUserByUserId type="hql">
        <![CDATA[
            select e
              from User e where e.userId = :userId
        ]]>
	</findUserByUserId>
	
	<findUserDetailByUserId type="hql">
        <![CDATA[
            select e
              from User e left join fetch e.roles  
              where e.userId = :userId
        ]]>
	</findUserDetailByUserId>

	<findUsersByCriteria type="hql">
    	 <![CDATA[
            select 
           	<#if queryRecord = true??>
            	e
            <#else>
            	count(e.id)
            </#if>
            
             from User e 
             where 1 = 1
            
            <#if userIdKeyword??>
             	and e.userId like (:percentChar + :userIdKeyword + :percentChar)
            </#if>
             
            <#if userNameKeyword??>
             	and e.userName like (:percentChar + :userNameKeyword + :percentChar)
            </#if>
             
             <#if queryRecord = true??>
             	order by e.id desc 
             </#if>
        ]]>
	</findUsersByCriteria>
	
	<findSchemeInfoBybranchSchemeId type="hql">
    	 <![CDATA[
            select e             
             from SchemeInfo e 
             where 1 = 1
            
            <#if brancheSchemeId??>
             and e.branchScheme.id = :brancheSchemeId
            </#if>
             
          
        ]]>
	</findSchemeInfoBybranchSchemeId>
	
	<findSystemModuleByAlias type="hql">
    	 <![CDATA[
            select e      
             from SystemModule e 
             where e.alias = :systemAlias
        ]]>
	</findSystemModuleByAlias>
	
	<findRolesBySystemAlias type="hql">
    	 <![CDATA[
            select e      
             from Role e 
             where e.systemModule.alias = :systemAlias
        ]]>
	</findRolesBySystemAlias>
	
	<findRolesByCriteria type="hql">
    	 <![CDATA[
            select 
           	<#if queryRecord = true??>
            	e
            <#else>
            	count(e.id)
            </#if>
            
             from Role e 
             where 1 = 1
             
            and e.systemModule.alias = :systemAlias 
            
            <#if aliasKeyword??>
             	and e.alias like (:percentChar + :aliasKeyword + :percentChar)
            </#if>
             
            <#if nameKeyword??>
             	and e.name like (:percentChar + :nameKeyword + :percentChar)
            </#if>
             
             <#if queryRecord = true??>
             	order by e.id desc 
             </#if>
        ]]>
	</findRolesByCriteria>
	
	<findFoldersBySystemAlias type="hql">
    	 <![CDATA[
            select e      
             from Folder e 
             where e.systemModule.alias = :systemAlias
        ]]>
	</findFoldersBySystemAlias>
	
	<findFoldersBySystemAlias type="hql">
    	 <![CDATA[
            select e      
             from Folder e 
             where e.systemModule.alias = :systemAlias
        ]]>
	</findFoldersBySystemAlias>
	
	<findFolderDetailById type="hql">
    	 <![CDATA[
            select e      
             from Folder e left join fetch e.links 
             where e.id = :id
        ]]>
	</findFolderDetailById>
	
	<findPermissionByAlias type="hql">
    	 <![CDATA[
            select e      
             from Permission e left join e.systemModule  
             where e.alias = :alias
        ]]>
	</findPermissionByAlias>
	
	<findPermissionsByCriteria type="hql">
    	 <![CDATA[
            select 
           	<#if queryRecord = true??>
            	e
            <#else>
            	count(e.id)
            </#if>
            
             from Permission e 
             where 1 = 1
             
            and e.systemModule.alias = :systemAlias 
            
            <#if aliasKeyword??>
             	and e.alias like (:percentChar + :aliasKeyword + :percentChar)
            </#if>
             
            <#if nameKeyword??>
             	and e.name like (:percentChar + :nameKeyword + :percentChar)
            </#if>
             
             <#if queryRecord = true??>
             	order by e.id desc 
             </#if>
        ]]>
	</findPermissionsByCriteria>
	
	<findPermissionsByUserId type="hql">
    	 <![CDATA[
             
             select distinct e from Permission e 
             	where e.enabled = true and e.systemModule.alias = :systemAlias
             	
             	<#if notAdminUser>
	           	and exists (select r from Role r left join r.permissions p where r.enabled = true and p.id = e.id and exists (
	           		select u from User u left join u.roles ur where ur.id = r.id and u.userId = :userId
	           	))	
	           	</#if>
        ]]>
	</findPermissionsByUserId>
	
	<findLinksBySystemAlias type="hql">
    	 <![CDATA[
             
             select distinct e from Link e where e.enabled = true and e.systemModule.alias = :systemAlias
             <#if notAdminUser>
             	and exists (select r from Role r left join r.links rl where r.enabled = true and rl.id = e.id and exists (
             		select u from User u left join u.roles ur where ur.id = r.id and u.userId = :userId
             	))	
             </#if>
             
        ]]>
	</findLinksBySystemAlias>
	
	<findLinksByFolderId type="hql">
    	 <![CDATA[
            select e      
             from Link e 
             where e.folder.id = :folderId
        ]]>
	</findLinksByFolderId>
	
	<findLinkByUrl type="hql">
    	 <![CDATA[
            select e      
             from Link e 
             where e.url = :url
        ]]>
	</findLinkByUrl>
	
	<getLinkCountByUserIdAndUrl type="hql">
    	 <![CDATA[
             
             select count(e.id) from Link e where e.enabled = true and 
             	e.url = :url 
             	and exists (select r from Role r left join r.links rl where rl.id = e.id and exists (
             		select u from User u left join u.roles ur where ur.id = r.id and u.userId = :userId
             	))	
        ]]>
	</getLinkCountByUserIdAndUrl>
	
	<findBranchSchemeByPollSchemeType type="hql">
		 <![CDATA[
	            select e      
	             from BranchScheme e 
	             where e.pollSchemeType = :pollSchemeType and e.direction = :direction
	        ]]>
	</findBranchSchemeByPollSchemeType>
	
    <findSchemeJobLogByCriteria type="hql">
        <![CDATA[
            from SchemeJobLog e
             where 1 = 1
             <#if entityId??>
              and e.id = :entityId
            </#if>
             <#if scheduleJobId??>
                and e.scheduleJobId = :scheduleJobId
            </#if>
            <#if lastJobInd??>
             	and e.lastJobInd =:lastJobInd
            </#if>
            <#if status??>
             	and e.status =:status
            </#if>
        ]]>
    </findSchemeJobLogByCriteria>

    <findLatestSchemeJobLog type="hql">
        <![CDATA[
            select a from SchemeJobLog  a
            where 1=1  and   a.lastJobInd = 'Y'  and  (a.status ='COMPLETE' or a.status ='FAILED' or a.status ='PROGRESS')
            <#if scheduleJobId??>
              and a.scheduleJobId = :scheduleJobId
             </#if>
              order by a.lastUpdateTime desc
             
        ]]>
    </findLatestSchemeJobLog>
    
    <findApplicationSettingByCode type="hql">
		 <![CDATA[
            	select e
             	from ApplicationSetting e 
             	where e.code = :code
           ]]>
	</findApplicationSettingByCode>
	
	<findApplicationSettingByCriteria type="hql">
		 <![CDATA[
	            select 
           	<#if queryRecord = true??>
            	e
            <#else>
            	count(e.id)
            </#if>
            
             from ApplicationSetting e 
             where 1 = 1
            
            <#if code??>
             	and e.code = :code
            </#if>
            
            <#if codeKeyword??>
             	and e.code like (:percentChar + :codeKeyword + :percentChar)
            </#if>
	        ]]>
	</findApplicationSettingByCriteria>

    <findTaskJobLogByCriteria type="hql">
        <![CDATA[
            SELECT
            <#if queryRecord = true??>
                e
            <#else>
                count(e.id)
            </#if>
            FROM TaskJobLog e
           WHERE 1 = 1
            <#if branchCode??>
              AND e.branchCode = :branchCode
            </#if>
            <#if entityId??>
              AND e.id = :entityId
            </#if>
            <#if userId!!=''>
              AND (e.createUser = :userId OR e.lastUpdateUser = :userId)
            </#if>
        ]]>
    </findTaskJobLogByCriteria>

    <findLatestTaskJobLog type="hql">
        <![CDATA[
            FROM TaskJobLog e
           WHERE e.lastestJobInd = 'Y'
             AND (e.status = 'COMPLETE' OR e.status ='FAILED' OR e.status='PROGRESS')
             AND e.pollSchemeType = :pollSchemeType
             AND e.branchCode = :branchCode
             AND e.pollSchemeID = :branchSchemeId
             AND e.direction = :direction
             
             order by e.lastUpdateTime desc
        ]]>
    </findLatestTaskJobLog>

    <findSchemeInfoBySchemeTypeAndClientType type="hql">
        <![CDATA[
            select e
            from SchemeInfo e left join fetch e.schemeTableColumns stc
            where 1=1
            <#if pollSchemeType??>
                and e.pollSchemeType = :pollSchemeType
            </#if>
            <#if clientType??>
                and e.clientType = :clientType
            </#if>
            <#if destination!!=''>
                and e.destination = :destination
            </#if>
        ]]>
    </findSchemeInfoBySchemeTypeAndClientType>

    <findSchemeInfoByCriteria type="hql">
        <![CDATA[
            SELECT
            <#if queryRecord = true??>
                e
            <#else>
                count(e.id)
            </#if>
            from SchemeInfo e
           where 1 = 1
            <#if entityId??>
              and e.id = :entityId
            </#if>
            <#if pollSchemeType??>
              and e.pollSchemeType = :pollSchemeType
            </#if>
            <#if clientType??>
              and e.clientType = :clientType
            </#if>
        ]]>
    </findSchemeInfoByCriteria>
	
	<findPollEodControlByBranchCode sql="hql">
	 	<![CDATA[
            from PollEodControl e
           where 1 = 1
            <#if branchCode??>
              and e.branchCode = :branchCode
            </#if>
            <#if businessDate??>
              and e.businessDate = :businessDate
            </#if>
            <#if status??>
              and e.status = :status
            </#if>
            order by e.businessDate desc, e.lastUpdateTime desc
        ]]>
	</findPollEodControlByBranchCode>

	<findBranchSchemeByPollSchemeTypeAndDirectionAndClientType type="hql">
		<![CDATA[
            from BranchScheme e
           where 1 = 1
            <#if pollSchemeType??>
              and e.pollSchemeType = :pollSchemeType
            </#if>
            <#if direction??>
              and e.direction = :direction
            </#if>
            <#if clientType??>
              and e.branchInfo.clientType = :clientType
            </#if>
            <#if branchCode??>
              and e.branchMaster.branchCode = :branchCode
            </#if>
            <#if enabled??>
              and e.enabled = :enabled
            </#if>
        ]]>
	</findBranchSchemeByPollSchemeTypeAndDirectionAndClientType>

	<findSchemeInfoByBySchemeTypeAndClientTypeAndTableName type="hql">
		<![CDATA[
            select e
            from SchemeInfo e left join fetch e.schemeTableColumns stc
            where 1=1
            <#if pollSchemeType??>
                and e.pollSchemeType = :pollSchemeType
            </#if>
            <#if clientType??>
                and e.clientType = :clientType
            </#if>
            <#if tableName??>
                and e.source = :tableName
            </#if>
        ]]>
	</findSchemeInfoByBySchemeTypeAndClientTypeAndTableName>

    <findBranchSchemeByCriteria type="hql">
        <![CDATA[
	        select
           	<#if queryRecord = true??>
            	e
            <#else>
            	count(e.id)
            </#if>
             from BranchScheme e
             where 1 = 1
            <#if branchCode??>
             	and e.branchMaster.branchCode = :branchCode
            </#if>
            <#if branchCodeKeyword!!=''>
             	and e.branchMaster.branchCode like (:percentChar + :branchCodeKeyword + :percentChar)
            </#if>
	        ]]>
    </findBranchSchemeByCriteria>

    <findSchemeScheduleJobByCriteria type="hql">
        <![CDATA[
	        SELECT
           	<#if queryRecord = true??>
            	e
            <#else>
            	count(e.id)
            </#if>
             FROM SchemeScheduleJob e
            WHERE 1 = 1
            <#if pollSchemeType??>
                AND e.pollSchemeType = :pollSchemeType
            </#if>
            <#if pollSchemeDirection??>
             	AND e.pollSchemeDirection = :pollSchemeDirection
            </#if>
            <#if jobNameKeyword??>
             	AND e.jobName LIKE (:percentChar + :jobNameKeyword + :percentChar)
            </#if>
        ]]>
    </findSchemeScheduleJobByCriteria>

    <findBranchMaster type="hql">
        <![CDATA[
            FROM BranchMaster e
           WHERE 1=1
            <#if branchCode!!=''>
                AND e.branchCode = :branchCode
            </#if>
            <#if branchType!!=''>
                AND e.branchType = :branchType
            </#if>
        ]]>
    </findBranchMaster>
    
    <findEDOCompletedBranchByCreateTimeRange type="sql">
        <![CDATA[
                	select PBM.BRANCH_TYPE, PBS1.POLL_BRANCH_MASTER_ID ,PBS1.POLL_BRANCH_SCHEME_ID, TJL.END_TIME 
					from dbo.POLL_BRANCH_SCHEME PBS1 
					left join dbo.POLL_BRANCH_SCHEME PBS2 
					on PBS2.DIRECTION = 'STG_TO_EDW' and PBS2.POLL_SCHEME_TYPE = 'SALES_EOD'
					left join dbo.TASK_JOB_LOG TJL 
					on TJL.POLL_SCHEME_TYPE = 'SALES_EOD'
					and  TJL.CREATE_TIME >= :startTime
					and  TJL.CREATE_TIME <= :endTime
					and  TJL.POLL_SCHEME_ID  = PBS1.POLL_BRANCH_SCHEME_ID 
					and  TJL.STATUS ='COMPLETE' 
					join dbo.POLL_BRANCH_MASTER PBM on PBM.POLL_BRANCH_MASTER_ID = PBS1.POLL_BRANCH_MASTER_ID
					where  PBS1.IS_ENABLED ='1'
					and PBS1.DIRECTION = 'POS_TO_STG' and PBS1.POLL_SCHEME_TYPE = 'SALES_EOD' 
					order by PBM.BRANCH_TYPE, PBS1.POLL_BRANCH_MASTER_ID , TJL.END_TIME				
        ]]>
    </findEDOCompletedBranchByCreateTimeRange>

	<getTableColumnInfoByDBNameAndTable type="sql">
		 <![CDATA[
		 	SELECT
				col.ordinal_position AS seq
				,col.column_name AS columnName
				,CASE WHEN col.data_type = 'smalldatetime' THEN 'JDBC_DATE'
				 WHEN col.data_type = 'datetime' THEN 'JDBC_TIMESTAMP'
				 WHEN col.data_type = 'uniqueidentifier' THEN 'JDBC_VARCHAR'
				 WHEN col.data_type = 'money' THEN 'JDBC_DECIMAL'
				 WHEN col.data_type = 'int' THEN 'JDBC_INTEGER'
				 ELSE 'JDBC_' + UPPER(col.data_type)
				 END AS columnFormat
				,CASE WHEN col.data_type = 'uniqueidentifier' THEN 36
				 ELSE COALESCE(col.character_maximum_length, 
								col.character_octet_length,
								col.numeric_precision,
								type.precision)
				END AS columnLength
				,COALESCE(col.numeric_scale, col.datetime_precision, 0) AS columnPrecision
				FROM information_schema.columns col, sys.types type
				WHERE 1=1
				AND col.data_type = type.name
				AND col.table_catalog = ?
				AND col.table_name = ?
				ORDER BY seq ASC
		 ]]>
	</getTableColumnInfoByDBNameAndTable>
	
    <findBranchInfoByCriteria type="hql">
        <![CDATA[
            SELECT
            <#if queryRecord = true??>
                e
            <#else>
                count(e.id)
            </#if>
            FROM BranchInfo e
            WHERE 1 = 1
            <#if entityId??>
              AND e.id = :entityId
            </#if>
            <#if enable??>
              AND e.enable = :enable
            </#if>
            <#if clientHostKeyword??>
                AND e.clientHost LIKE (:percentChar + :clientHostKeyword + :percentChar)
            </#if>
        ]]>
    </findBranchInfoByCriteria>

    <findBranchMasterByCriteria type="hql">
        <![CDATA[
            SELECT
            <#if queryRecord = true??>
                e
            <#else>
                count(e.id)
            </#if>
            FROM BranchMaster e
            WHERE 1 = 1
            <#if branchCode??>
                AND e.branchCode = :branchCode
            </#if>
        ]]>
    </findBranchMasterByCriteria>

    <findTaskJobLogDetailByCriteria type="hql">
        <![CDATA[
            SELECT
            <#if queryRecord = true??>
                e
            <#else>
                count(e.id)
            </#if>
            FROM TaskJobLogDetail e
           WHERE 1=1
            <#if taskJobLogId??>
              AND e.taskJobLog.id = :taskJobLogId
            </#if>
        ]]>
    </findTaskJobLogDetailByCriteria>

    <findTaskJobExceptionDetailByCriteria type="hql">
        <![CDATA[
            SELECT
            <#if queryRecord = true??>
                e
            <#else>
                count(e.id)
            </#if>
            FROM TaskJobExceptionDetail e
           WHERE 1=1
            <#if taskJobLogId??>
              AND e.taskJobLog.id = :taskJobLogId
            </#if>
        ]]>
    </findTaskJobExceptionDetailByCriteria>

    <findSchemeTableColumnByCriteria type="hql">
        <![CDATA[
            SELECT
            <#if queryRecord = true??>
                e
            <#else>
                count(e.id)
            </#if>
            FROM SchemeTableColumn e
            WHERE 1 = 1
            <#if schemeInfoId??>
                AND e.schemeInfo.id = :schemeInfoId
            </#if>
        ]]>
    </findSchemeTableColumnByCriteria>
	<findTaskJobExceptionDetailByStatusAndSeverity type="hql">
		   <![CDATA[
	            FROM TaskJobExceptionDetail e
	            WHERE 1 = 1
	            <#if status??>
	                AND e.status = :status
	            </#if>
	            <#if severity??>
	                AND e.severity <= :severity
	            </#if>
	        ]]>
	</findTaskJobExceptionDetailByStatusAndSeverity>
</queries>