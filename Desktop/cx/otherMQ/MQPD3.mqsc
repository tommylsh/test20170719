*******************************************************************************
* Script generated on 2017-02-14   at 03.20.01 
* Script generated by user 'mqm' on host 'HKGX1LNX003-WMQ' 
* Queue manager name: MQPD3 
* Queue manager platform: UNIX 
* Queue manager command level: (800/802) XRCAP(YES)  
* Command issued: dmpmqcfg -mMQPD3  
*******************************************************************************
ALTER QMGR +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19.48.19) +
   CCSID(819) +
   CERTLABL('ibmwebspheremqmqpd3') +
   CHLAUTH(DISABLED) +
   CLWLUSEQ(LOCAL) +
*  CMDLEVEL(800) +
*  COMMANDQ(SYSTEM.ADMIN.COMMAND.QUEUE) +
   CONNAUTH('SYSTEM.DEFAULT.AUTHINFO.IDPWOS') +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.23) +
   DEADQ('SYSTEM.DEAD.LETTER.QUEUE') +
   DESCR('FabriCX non-Clustered Queue Manager for PROD') +
   MAXHANDS(512) +
   MAXMSGL(5242880) +
   MAXUMSGS(100000) +
   PARENT('MQ70PD1') +
*  QMID(MQPD3_2016-04-27_16.12.23) +
   SSLCRYP(' ') +
   SSLKEYR('/mqha/mqdata03/qmgrs/MQPD3/ssl/key') +
   STATCHL(LOW) +
   STATMQI(ON) +
   STATQ(ON) +
   SUITEB(NONE) +
*  VERSION(08000005) +
*  XRCAP(YES) +
   FORCE
DEFINE QALIAS('AODB.EODS.AR') +
*  ALTDATE(2016-11-04) +
*  ALTTIME(15.10.52) +
   TARGET('CX.AODB.EODS.AR') +
   DEFPSIST(YES) +
   DESCR('AppID:0507 4CNRS Interface 008') +
   TARGTYPE(TOPIC) +
   REPLACE
DEFINE QLOCAL('AODB.EODS.AR.IN') +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19.48.19) +
*  CRDATE(2016-11-03) +
*  CRTIME(19.48.19) +
   DEFPSIST(YES) +
   DESCR('AppID:0507 4CNRS Interface 008') +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(640000) +
   MSGDLVSQ(FIFO) +
   REPLACE
DEFINE QLOCAL('AODB.EODS.AR.RECOVERY') +
*  ALTDATE(2016-11-09) +
*  ALTTIME(19.39.20) +
*  CRDATE(2016-11-09) +
*  CRTIME(19.39.20) +
   DEFPSIST(YES) +
   DESCR('AppID:0507 4CNRS Interface 008') +
   DISTL(NO) +
   MAXDEPTH(640000) +
   MSGDLVSQ(FIFO) +
   REPLACE
DEFINE QLOCAL('AODB.EODS.AR.TEMP') +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19.48.20) +
*  CRDATE(2016-11-03) +
*  CRTIME(19.48.20) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DESCR('AppID:0507 4CNRS') +
   DISTL(NO) +
   MAXDEPTH(640000) +
   MSGDLVSQ(FIFO) +
   REPLACE
DEFINE QLOCAL('BK70QMPD1') +
*  ALTDATE(2016-11-12) +
*  ALTTIME(20.14.15) +
*  CRDATE(2016-08-31) +
*  CRTIME(14.58.22) +
   DEFPSIST(YES) +
   DESCR('TRANSMIT Q to BK70QMPD1') +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(1) +
   MAXDEPTH(4000000) +
   MSGDLVSQ(FIFO) +
   TRIGGER +
*  OPPROCS(17) +
   TRIGDATA('MQPD3.TO.BK70QMPD1') +
   USAGE(XMITQ) +
   REPLACE
DEFINE QLOCAL('EODS.FI.AODB.EVENT.IN') +
*  ALTDATE(2016-11-15) +
*  ALTTIME(12.03.14) +
*  CRDATE(2016-11-15) +
*  CRTIME(12.03.14) +
   DEFPSIST(YES) +
   DESCR('AppID:0507 4CNRS Interface 008') +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(640000) +
   MSGDLVSQ(FIFO) +
*  OPPROCS(1) +
   REPLACE
DEFINE QLOCAL('EODS.FI.EVENT.IN') +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19.48.19) +
*  CRDATE(2016-11-03) +
*  CRTIME(19.48.19) +
   DEFPSIST(YES) +
   DESCR('AppID:0507 4CNRS Interface 005/006/007/008') +
   DISTL(NO) +
   MAXDEPTH(640000) +
   MSGDLVSQ(FIFO) +
   REPLACE
DEFINE QREMOTE('EODS.FI.EVENT.OUT') +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19.48.19) +
   DEFPSIST(YES) +
   DESCR('AppID:0507 4CNRS Interface 005/006/007/008') +
   RQMNAME('IIBQMPD2') +
   RNAME('EODS.FI.EVENT.OUT') +
   XMITQ('IIBQMPD2') +
   REPLACE
DEFINE QLOCAL('EODS.FI.FDMD34.EVENT.IN') +
*  ALTDATE(2016-11-15) +
*  ALTTIME(12.03.14) +
*  CRDATE(2016-11-15) +
*  CRTIME(12.03.14) +
   DEFPSIST(YES) +
   DESCR('AppID:0507 4CNRS Interface 005') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(640000) +
   MSGDLVSQ(FIFO) +
   REPLACE
DEFINE QLOCAL('EODS.FI.FDMOWP.EVENT.IN') +
*  ALTDATE(2016-11-15) +
*  ALTTIME(12.03.14) +
*  CRDATE(2016-11-15) +
*  CRTIME(12.03.14) +
   DEFPSIST(YES) +
   DESCR('AppID:0507 4CNRS Interface 007') +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(640000) +
   MSGDLVSQ(FIFO) +
*  OPPROCS(1) +
   REPLACE
DEFINE QLOCAL('EODS.FI.FDMSMP.EVENT.IN') +
*  ALTDATE(2016-11-15) +
*  ALTTIME(12.03.14) +
*  CRDATE(2016-11-15) +
*  CRTIME(12.03.14) +
   DEFPSIST(YES) +
   DESCR('AppID:0507 4CNRS Interface 006') +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(640000) +
   MSGDLVSQ(FIFO) +
*  OPPROCS(1) +
   REPLACE
DEFINE QLOCAL('EODS.FI.NLSSM.EVENT.IN') +
*  ALTDATE(2016-11-15) +
*  ALTTIME(12.03.14) +
*  CRDATE(2016-11-15) +
*  CRTIME(12.03.14) +
   DEFPSIST(YES) +
   DESCR('AppID:0507 4CNRS Interface 003') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(640000) +
   MSGDLVSQ(FIFO) +
   REPLACE
DEFINE QLOCAL('EODS.FLTCHG.TEMP') +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19.48.20) +
*  CRDATE(2016-11-03) +
*  CRTIME(19.48.20) +
*  CURDEPTH(33) +
   DEFPSIST(YES) +
   DESCR('AppID:0507 4CNRS') +
   DISTL(NO) +
   MAXDEPTH(640000) +
   MSGDLVSQ(FIFO) +
   REPLACE
DEFINE QLOCAL('EODS.NRS.FLTEVENT') +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19.48.19) +
*  CRDATE(2016-11-03) +
*  CRTIME(19.48.19) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DESCR('AppID:0507 4CNRS Interface 005/006/007/010') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(640000) +
   MSGDLVSQ(FIFO) +
   REPLACE
DEFINE QLOCAL('EODS.NRS.FLTEVENT.PROD2ETE') +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19.48.19) +
*  CRDATE(2016-11-03) +
*  CRTIME(19.48.19) +
*  CURDEPTH(10) +
   DEFPSIST(YES) +
   DESCR('AppID:0507 4CNRS') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(640000) +
   MSGDLVSQ(FIFO) +
   REPLACE
DEFINE QLOCAL('EODS.NRS.PAXCOUNT') +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19.48.19) +
*  CRDATE(2016-11-03) +
*  CRTIME(19.48.19) +
   DEFPSIST(YES) +
   DESCR('AppID:0507 4CNRS Interface 010:Pax Count') +
   DISTL(NO) +
   MAXDEPTH(640000) +
   MSGDLVSQ(FIFO) +
   REPLACE
DEFINE QLOCAL('EODS.NRSHAS.FLTEVENT') +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19.48.19) +
*  CRDATE(2016-11-03) +
*  CRTIME(19.48.19) +
*  CURDEPTH(2) +
   DEFPSIST(YES) +
   DESCR('AppID:0414 4CNRS Interface 005/006/007/010') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(640000) +
   MSGDLVSQ(FIFO) +
   REPLACE
DEFINE QLOCAL('EODS.NRSHAS.FLTEVENT.PROD2ETE') +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19.48.19) +
*  CRDATE(2016-11-03) +
*  CRTIME(19.48.19) +
*  CURDEPTH(91) +
   DEFPSIST(YES) +
   DESCR('AppID:0507 4CNRS') +
   DISTL(NO) +
   MAXDEPTH(640000) +
   MSGDLVSQ(FIFO) +
   REPLACE
DEFINE QLOCAL('EODS.NRSHAS.PAXCOUNT') +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19.48.19) +
*  CRDATE(2016-11-03) +
*  CRTIME(19.48.19) +
   DEFPSIST(YES) +
   DESCR('AppID:0507 4CNRS Interface 010:Pax Count') +
   DISTL(NO) +
   MAXDEPTH(640000) +
   MSGDLVSQ(FIFO) +
   REPLACE
DEFINE QLOCAL('EODS.PAXCOUNT.IN') +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19.48.19) +
*  CRDATE(2016-11-03) +
*  CRTIME(19.48.19) +
   DEFPSIST(YES) +
   DESCR('AppID:0507 4CNRS Interface 010:Pax Count') +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(640000) +
   MSGDLVSQ(FIFO) +
   REPLACE
DEFINE QLOCAL('EODS.PAXCOUNT.STG') +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19.48.19) +
*  CRDATE(2016-11-03) +
*  CRTIME(19.48.19) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DESCR('AppID:0507 4CNRS Interface 010') +
   DISTL(NO) +
*  IPPROCS(16) +
   MAXDEPTH(640000) +
   MSGDLVSQ(FIFO) +
*  OPPROCS(1) +
   REPLACE
DEFINE QLOCAL('FBX.IPIL.SEARCHPNRDETAIL') +
*  ALTDATE(2016-11-28) +
*  ALTTIME(04.21.01) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.45.58) +
   DEFPSIST(YES) +
   DESCR('AppID:0508 RESP Q for SearchPNRDetail in CheckInMgmt') +
   DISTL(NO) +
*  IPPROCS(10) +
   MAXDEPTH(5000) +
   MAXMSGL(5242880) +
   MONQ(MEDIUM) +
*  OPPROCS(4) +
   REPLACE
DEFINE QLOCAL('FBX.IPIL.SEARCHPNRDETAIL.V2') +
*  ALTDATE(2016-08-09) +
*  ALTTIME(13.47.06) +
*  CRDATE(2016-08-09) +
*  CRTIME(13.46.23) +
   DEFPSIST(YES) +
   DESCR('AppID:0507/0508 RESP Q for SearchPNRDetail in CheckInMgmt V2') +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(5242880) +
   REPLACE
DEFINE QLOCAL('IIBQMPD2') +
*  ALTDATE(2017-01-30) +
*  ALTTIME(03.33.22) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.45.58) +
   DEFPSIST(YES) +
   DESCR('XMITQ FOR IIBQMPD2') +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(2) +
   MAXDEPTH(5000) +
   MSGDLVSQ(FIFO) +
   TRIGGER +
*  OPPROCS(7) +
   TRIGDATA('MQPD3.TO.IIBQMPD2') +
   USAGE(XMITQ) +
   REPLACE
DEFINE QLOCAL('MQ70PD1') +
*  ALTDATE(2016-11-12) +
*  ALTTIME(20.13.34) +
*  CRDATE(2016-11-03) +
*  CRTIME(19.48.19) +
   DESCR('Transmission queue to FabriCX PROD') +
   INITQ('SYSTEM.CHANNEL.INITQ') +
   MAXDEPTH(5000) +
   TRIGGER +
*  OPPROCS(1) +
   TRIGDATA('MQPD3.TO.MQ70PD1') +
   USAGE(XMITQ) +
   REPLACE
DEFINE QREMOTE('PIP.1A.SBRFEED.XML') +
*  ALTDATE(2016-08-31) +
*  ALTTIME(14.58.22) +
   DEFPSIST(YES) +
   DESCR('Remote queue for SBR14.1 XML') +
   RQMNAME('IIBQMPD2') +
   RNAME('PIP.1A.SBRFEED.XML') +
   XMITQ('IIBQMPD2') +
   REPLACE
DEFINE QLOCAL('PIP.ETL.SBRFEED.XML') +
*  ALTDATE(2016-08-31) +
*  ALTTIME(14.58.22) +
*  CRDATE(2016-08-31) +
*  CRTIME(14.58.22) +
   DEFPSIST(YES) +
   DESCR('Local queue for SBR14.1 XML for ETL') +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(999999) +
   MONQ(MEDIUM) +
   MSGDLVSQ(FIFO) +
*  OPPROCS(2) +
   REPLACE
DEFINE QLOCAL('PIP.ETL.SBRFEED.XML.STG.EN') +
*  ALTDATE(2016-08-31) +
*  ALTTIME(14.58.22) +
*  CRDATE(2016-08-31) +
*  CRTIME(14.58.22) +
*  CURDEPTH(21) +
   DEFPSIST(YES) +
   DESCR('Local STG ETL EN queue for SBR14.1 XML') +
   DISTL(NO) +
*  IPPROCS(32) +
   MAXDEPTH(999999) +
   MONQ(MEDIUM) +
   MSGDLVSQ(FIFO) +
*  OPPROCS(1) +
   REPLACE
DEFINE QLOCAL('PIP.ETL.SBRFEED.XML.STG.ODS') +
*  ALTDATE(2016-08-31) +
*  ALTTIME(14.58.22) +
*  CRDATE(2016-08-31) +
*  CRTIME(14.58.22) +
*  CURDEPTH(2) +
   DEFPSIST(YES) +
   DESCR('Local STG ETL ODS queue for SBR14.1 XML') +
   DISTL(NO) +
*  IPPROCS(8) +
   MAXDEPTH(999999) +
   MONQ(MEDIUM) +
   MSGDLVSQ(FIFO) +
*  OPPROCS(1) +
   REPLACE
DEFINE QLOCAL('PIP.ETL.SBRFEED.XML.STG.ODS2') +
*  ALTDATE(2016-08-31) +
*  ALTTIME(14.58.22) +
*  CRDATE(2016-08-31) +
*  CRTIME(14.58.22) +
*  CURDEPTH(2) +
   DEFPSIST(YES) +
   DESCR('Local STG ETL ODS2 queue for SBR14.1 XML') +
   DISTL(NO) +
*  IPPROCS(16) +
   MAXDEPTH(999999) +
   MONQ(MEDIUM) +
   MSGDLVSQ(FIFO) +
*  OPPROCS(1) +
   REPLACE
DEFINE QREMOTE('PIP.EVENT.SBRFEED.ROUTE.IN') +
*  ALTDATE(2016-08-31) +
*  ALTTIME(14.58.22) +
   DEFPSIST(YES) +
   DESCR('Remote queue for SBR14.1 EN to IIB') +
   RQMNAME('BK70QMPD1') +
   RNAME('PIP.EVENT.SBRFEED.ROUTE.IN') +
   XMITQ('BK70QMPD1') +
   REPLACE
DEFINE QLOCAL('PIP.EVENT.SBRFEED.ROUTE.IN.TMP') +
*  ALTDATE(2016-09-15) +
*  ALTTIME(15.25.02) +
*  CRDATE(2016-09-15) +
*  CRTIME(15.25.02) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.ACCOUNTING.QUEUE') +
   ACCTQ(OFF) +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.58) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
   DESCR('WebSphere MQ Administration Accounting Queue') +
   DISTL(NO) +
   MAXDEPTH(3000) +
   STATQ(OFF) +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.ACTIVITY.QUEUE') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.58) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
   DESCR('WebSphere MQ Administration Activity Queue') +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.CHANNEL.EVENT') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.58) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
   DEFSOPT(EXCL) +
   DESCR('WebSphere MQ Channel Related Event Queue') +
   DISTL(NO) +
   MAXDEPTH(3000) +
   MAXMSGL(9000) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.COMMAND.EVENT') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.58) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
   DEFSOPT(EXCL) +
   DESCR('WebSphere MQ Command Event Queue') +
   DISTL(NO) +
   MAXDEPTH(5000) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.COMMAND.QUEUE') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.58) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
   DEFSOPT(EXCL) +
   DESCR('WebSphere MQ Administration Command Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(3000) +
   MAXMSGL(32762) +
*  OPPROCS(2) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.CONFIG.EVENT') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.58) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
   DEFSOPT(EXCL) +
   DESCR('WebSphere MQ Configuration Event Queue') +
   DISTL(NO) +
   MAXDEPTH(5000) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.LOGGER.EVENT') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.58) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
   DEFSOPT(EXCL) +
   DESCR('WebSphere MQ Logger Event Queue') +
   DISTL(NO) +
   MAXDEPTH(3000) +
   MAXMSGL(9000) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.PERFM.EVENT') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.58) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
   DEFSOPT(EXCL) +
   DESCR('WebSphere MQ Performance Related Event Queue') +
   DISTL(NO) +
   MAXDEPTH(3000) +
   MAXMSGL(9000) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.PUBSUB.EVENT') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.58) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
   DESCR('WebSphere MQ Publish/Subscribe Related Event Queue') +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.QMGR.EVENT') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.58) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
*  CURDEPTH(1) +
   DEFSOPT(EXCL) +
   DESCR('WebSphere MQ Queue Manager Related Event Queue') +
   DISTL(NO) +
   MAXDEPTH(3000) +
   MAXMSGL(32762) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.STATISTICS.QUEUE') +
   ACCTQ(OFF) +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.58) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
*  CURDEPTH(2160) +
   DESCR('WebSphere MQ Administration Statistics Queue') +
   DISTL(NO) +
   MAXDEPTH(3000) +
   STATQ(OFF) +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.TRACE.ACTIVITY.QUEUE') +
   ACCTQ(OFF) +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.58) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
   DESCR('WebSphere MQ Administration Trace Activity Queue') +
   DISTL(NO) +
   MAXDEPTH(3000) +
   STATQ(OFF) +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.TRACE.ROUTE.QUEUE') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.58) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
   DESCR('WebSphere MQ Administration Trace Route Queue') +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SYSTEM.AUTH.DATA.QUEUE') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.58) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.27) +
*  CURDEPTH(176) +
   DESCR('WebSphere MQ Authority Data Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
*  OPPROCS(1) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.ADMIN.STREAM') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.58) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
   DEFPSIST(YES) +
   DESCR('Admin stream for queued Pub/Sub interface') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   MSGDLVSQ(FIFO) +
*  OPPROCS(1) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.CONTROL.QUEUE') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.58) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
   DEFPSIST(YES) +
   DESCR('Control queue for queued Pub/Sub interface') +
   DISTL(NO) +
*  IPPROCS(3) +
   MAXDEPTH(5000) +
   MSGDLVSQ(FIFO) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.DEFAULT.STREAM') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.58) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
   DEFPSIST(YES) +
   DESCR('Default stream for queued Pub/Sub interface') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   MSGDLVSQ(FIFO) +
*  OPPROCS(2) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.INTER.BROKER.COMMUNICATIONS') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.58) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.29) +
   DEFPSIST(YES) +
   DESCR('MQSeries Publish/Subscribe internal reply queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
   MAXMSGL(104857600) +
   MSGDLVSQ(FIFO) +
   NOSHARE +
   REPLACE
DEFINE QLOCAL('SYSTEM.CHANNEL.INITQ') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.58) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
   DEFSOPT(EXCL) +
   DESCR('WebSphere MQ Channel Initiation Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(1000) +
   MAXMSGL(2000) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CHANNEL.SYNCQ') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.58) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
*  CURDEPTH(8) +
   DEFPSIST(YES) +
   DESCR('WebSphere MQ Channel Sync Queue') +
   DISTL(NO) +
   MAXDEPTH(20000) +
   MAXMSGL(20000) +
   QDEPTHLO(40) +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CHLAUTH.DATA.QUEUE') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.58) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
*  CURDEPTH(3) +
   DESCR('WebSphere MQ Channel Authentication Data Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CICS.INITIATION.QUEUE') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.58) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
   DESCR('WebSphere MQ Default CICS Initiation queue') +
   DISTL(NO) +
   MAXDEPTH(1000) +
   MAXMSGL(1000) +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CLUSTER.COMMAND.QUEUE') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.58) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
   DESCR('WebSphere MQ Cluster Command Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CLUSTER.HISTORY.QUEUE') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.58) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
   DESCR('WebSphere MQ Cluster History Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CLUSTER.REPOSITORY.QUEUE') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.58) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
*  CURDEPTH(2) +
   DESCR('WebSphere MQ Cluster Repository Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
*  OPPROCS(1) +
   REPLACE
DEFINE QMODEL('SYSTEM.CLUSTER.TRANSMIT.MODEL.QUEUE') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.58) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
   DEFSOPT(EXCL) +
   DEFTYPE(PERMDYN) +
   DESCR('WebSphere MQ Cluster Transmission Model Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   NOSHARE +
   USAGE(XMITQ) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CLUSTER.TRANSMIT.QUEUE') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.58) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
   DESCR('WebSphere MQ Cluster Transmission Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QLOCAL('SYSTEM.DDELAY.LOCAL.QUEUE') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
   DEFSOPT(EXCL) +
   DESCR('WebSphere MQ Deferred Delivery Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
   MSGDLVSQ(FIFO) +
   QDPMAXEV(DISABLED) +
   NOSHARE +
   REPLACE
DEFINE QLOCAL('SYSTEM.DEAD.LETTER.QUEUE') +
*  ALTDATE(2016-09-28) +
*  ALTTIME(09.53.55) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
*  CURDEPTH(1555) +
   DESCR('WebSphere MQ Default Dead Letter Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   MAXMSGL(104857600) +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QALIAS('SYSTEM.DEFAULT.ALIAS.QUEUE') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
   REPLACE
DEFINE QLOCAL('SYSTEM.DEFAULT.INITIATION.QUEUE') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
   DESCR('WebSphere MQ Default Initiation Queue') +
   DISTL(NO) +
   MAXDEPTH(1000) +
   MAXMSGL(1000) +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.DEFAULT.LOCAL.QUEUE') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.27) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QMODEL('SYSTEM.DEFAULT.MODEL.QUEUE') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.27) +
   DEFSOPT(EXCL) +
   DEFTYPE(TEMPDYN) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   NOSHARE +
   REPLACE
DEFINE QREMOTE('SYSTEM.DEFAULT.REMOTE.QUEUE') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
   XMITQ(' ') +
   REPLACE
DEFINE QLOCAL('SYSTEM.DOTNET.XARECOVERY.QUEUE') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
   DEFPSIST(YES) +
   DESCR('WebSphere MQ .NET XA Recovery Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QMODEL('SYSTEM.DURABLE.MODEL.QUEUE') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
   DEFSOPT(EXCL) +
   DEFTYPE(PERMDYN) +
   DESCR('Model for managed queues for durable subscriptions') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   NOSHARE +
   REPLACE
DEFINE QLOCAL('SYSTEM.DURABLE.SUBSCRIBER.QUEUE') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
*  CURDEPTH(3) +
   DESCR('Store of information about durable subscribers') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('SYSTEM.HIERARCHY.STATE') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
*  CURDEPTH(4) +
   DEFPSIST(YES) +
   DESCR('MQ Publish/Subscribe Distributed Pub/sub hierarchy relationship') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QLOCAL('SYSTEM.INTER.QMGR.CONTROL') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
   DEFPSIST(YES) +
   DESCR('MQ Publish/Subscribe Distributed Pub/sub Control Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QLOCAL('SYSTEM.INTER.QMGR.FANREQ') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
   DEFPSIST(YES) +
   DESCR('MQ Publish/Subscribe Distributed Pub/sub proxy-sub request queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
*  OPPROCS(1) +
   REPLACE
DEFINE QLOCAL('SYSTEM.INTER.QMGR.PUBS') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
   DEFPSIST(YES) +
   DESCR('MQ Publish/Subscribe Distributed Pub/sub Publications') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QLOCAL('SYSTEM.INTERNAL.REPLY.QUEUE') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
   DESCR('WebSphere MQ Internal Reply Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   MAXMSGL(32762) +
   REPLACE
DEFINE QLOCAL('SYSTEM.INTERNAL.REQUEST.QUEUE') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
   DESCR('WebSphere MQ Internal Request Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   MAXMSGL(32762) +
   REPLACE
DEFINE QMODEL('SYSTEM.JMS.TEMPQ.MODEL') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
   DEFSOPT(EXCL) +
   DEFTYPE(TEMPDYN) +
   DESCR('Model for JMS temporary queues') +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   NOSHARE +
   REPLACE
DEFINE QLOCAL('SYSTEM.MESSAGE.ASSOCIATION.QUEUE') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
   DESCR('WebSphere MQ Message Association Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QMODEL('SYSTEM.MQEXPLORER.REPLY.MODEL') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
   DEFREADA(YES) +
   DEFSOPT(EXCL) +
   DEFTYPE(TEMPDYN) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   NOSHARE +
   REPLACE
DEFINE QMODEL('SYSTEM.MQSC.REPLY.QUEUE') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
   DEFSOPT(EXCL) +
   DEFTYPE(TEMPDYN) +
   DESCR('WebSphere MQ MQSC Reply Queue') +
   DISTL(NO) +
   MAXDEPTH(3000) +
   MAXMSGL(32762) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QMODEL('SYSTEM.NDURABLE.MODEL.QUEUE') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
   DEFREADA(YES) +
   DEFSOPT(EXCL) +
   DEFTYPE(TEMPDYN) +
   DESCR('Model for managed queues for non durable subscriptions') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   NOSHARE +
   REPLACE
DEFINE QLOCAL('SYSTEM.PENDING.DATA.QUEUE') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
   DEFSOPT(EXCL) +
   DESCR('WebSphere MQ Deferred Message Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
   MSGDLVSQ(FIFO) +
*  OPPROCS(1) +
   QDPMAXEV(DISABLED) +
   NOSHARE +
   REPLACE
DEFINE QLOCAL('SYSTEM.PROTECTION.ERROR.QUEUE') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
   DEFPSIST(YES) +
   DESCR('WebSphere MQ Message Protection Error Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QLOCAL('SYSTEM.PROTECTION.POLICY.QUEUE') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
   DEFPSIST(YES) +
   DESCR('WebSphere MQ Message Protection Policy Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QLOCAL('SYSTEM.RETAINED.PUB.QUEUE') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
*  CURDEPTH(6) +
   DESCR('Store of retained publications') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   MAXMSGL(104857600) +
   MSGDLVSQ(FIFO) +
   REPLACE
DEFINE QLOCAL('SYSTEM.SELECTION.EVALUATION.QUEUE') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
   DESCR('WebSphere MQ Selection Evaluation Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('SYSTEM.SELECTION.VALIDATION.QUEUE') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
*  CRDATE(2016-04-27) +
*  CRTIME(16.12.28) +
   DESCR('WebSphere MQ Selection Validation Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE NAMELIST('SYSTEM.DEFAULT.NAMELIST') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
   REPLACE
DEFINE NAMELIST('SYSTEM.QPUBSUB.QUEUE.NAMELIST') +
*  NAMCOUNT(2) +
   NAMES('SYSTEM.BROKER.DEFAULT.STREAM' +
        ,'SYSTEM.BROKER.ADMIN.STREAM') +
   DESCR('A list of queues for the queued Pub/Sub interface to monitor') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
   REPLACE
DEFINE NAMELIST('SYSTEM.QPUBSUB.SUBPOINT.NAMELIST') +
*  NAMCOUNT(1) +
   NAMES('SYSTEM.BROKER.DEFAULT.SUBPOINT') +
   DESCR('Topic objects list used to match to RFH2 subscription points') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
   REPLACE
DEFINE PROCESS('SYSTEM.DEFAULT.PROCESS') +
   APPLTYPE(UNIX) +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
   REPLACE
DEFINE CHANNEL('IIBQMPD1.TO.MQPD3') +
   CHLTYPE(RCVR) +
*  ALTDATE(2016-08-08) +
*  ALTTIME(17.47.51) +
   DESCR('Receiver channel from IIBQMPD1') +
   MAXMSGL(5242880) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('IIBQMPD2.TO.MQPD3') +
   CHLTYPE(RCVR) +
*  ALTDATE(2016-08-08) +
*  ALTTIME(17.47.57) +
   DESCR('Receiver channel from IIBQMPD2') +
   MAXMSGL(5242880) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('IIBQMPD3.TO.MQPD3') +
   CHLTYPE(RCVR) +
*  ALTDATE(2016-08-08) +
*  ALTTIME(17.48.04) +
   DESCR('Receiver channel from IIBQMPD3') +
   MAXMSGL(5242880) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('IIBQMPD4.TO.MQPD3') +
   CHLTYPE(RCVR) +
*  ALTDATE(2016-08-08) +
*  ALTTIME(17.48.12) +
   DESCR('Receiver channel from IIBQMPD4') +
   MAXMSGL(5242880) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('MQ70PD1.TO.MQPD3') +
   CHLTYPE(RCVR) +
*  ALTDATE(2016-08-31) +
*  ALTTIME(14.58.22) +
   DESCR('Receiver channel from MQ70PD1 to MQPD3') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('MQPD3.0414.ETL') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2016-11-10) +
*  ALTTIME(18.02.05) +
   DESCR('AppID:0414 4CNRS') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('MQPD3.0414NRS.C') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2016-11-10) +
*  ALTTIME(18.01.52) +
   DESCR('AppID:0414 4CNRS') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('MQPD3.0414NRSHAS.C') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2016-11-10) +
*  ALTTIME(18.01.59) +
   DESCR('AppID:0414 4CNRS') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('MQPD3.CXIPETL') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2016-09-19) +
*  ALTTIME(16.42.01) +
   DESCR('SVRCONN CHANNEL FOR CXIP ETL') +
   MAXMSGL(5242880) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('MQPD3.IPIL') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2016-08-08) +
*  ALTTIME(17.48.19) +
   DESCR('AppID:0508 SVRCONN CHANNEL FOR IPIL') +
   MAXMSGL(5242880) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('MQPD3.TO.BK70QMPD1') +
   CHLTYPE(SDR) +
*  ALTDATE(2016-08-31) +
*  ALTTIME(14.58.22) +
   CONNAME('hkgx1unx001-wmb-vip.cathaypacific.com(1414)') +
   DESCR('Sender channel from MQPD3 to BK70QMPD1') +
   TRPTYPE(TCP) +
   XMITQ('BK70QMPD1') +
   REPLACE
DEFINE CHANNEL('MQPD3.TO.IIBQMPD2') +
   CHLTYPE(SDR) +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
   CONNAME('IIBPD2-VIP.cathaypacific.com(1415)') +
   DESCR('Sender channel to IIBQMPD2') +
   TRPTYPE(TCP) +
   XMITQ('IIBQMPD2') +
   REPLACE
DEFINE CHANNEL('MQPD3.TO.MQ70PD1') +
   CHLTYPE(SDR) +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19.48.20) +
   CONNAME('hkgx1unx001-wmb-vip.cathaypacific.com(1416)') +
   DESCR('Sender Channel To MQ70PD1') +
   TRPTYPE(TCP) +
   XMITQ('MQ70PD1') +
   REPLACE
DEFINE CHANNEL('SYSTEM.AUTO.RECEIVER') +
   CHLTYPE(RCVR) +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
   DESCR('Auto-defined by') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.AUTO.SVRCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
   DESCR('Auto-defined by') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.CLUSRCVR') +
   CHLTYPE(CLUSRCVR) +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
   MCATYPE(THREAD) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.CLUSSDR') +
   CHLTYPE(CLUSSDR) +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
   MCATYPE(THREAD) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.RECEIVER') +
   CHLTYPE(RCVR) +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.REQUESTER') +
   CHLTYPE(RQSTR) +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.SENDER') +
   CHLTYPE(SDR) +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
   TRPTYPE(TCP) +
   XMITQ(' ') +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.SERVER') +
   CHLTYPE(SVR) +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
   TRPTYPE(TCP) +
   XMITQ(' ') +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.SVRCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.CLNTCONN') +
   CHLTYPE(CLNTCONN) +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE AUTHINFO('SYSTEM.DEFAULT.AUTHINFO.IDPWLDAP') +
   AUTHTYPE(IDPWLDAP) +
   CONNAME(' ') +
   CHCKCLNT(REQUIRED) +
   SHORTUSR(' ') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
   REPLACE
DEFINE AUTHINFO('SYSTEM.DEFAULT.AUTHINFO.IDPWOS') +
   AUTHTYPE(IDPWOS) +
   CHCKCLNT(NONE) +
   CHCKLOCL(NONE) +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
   REPLACE
DEFINE AUTHINFO('SYSTEM.DEFAULT.AUTHINFO.OCSP') +
   AUTHTYPE(OCSP) +
   OCSPURL(' ') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
   REPLACE
DEFINE AUTHINFO('SYSTEM.DEFAULT.AUTHINFO.CRLLDAP') +
   AUTHTYPE(CRLLDAP) +
   CONNAME(' ') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
   REPLACE
DEFINE LISTENER('MQPD3.TCP') TRPTYPE(TCP) CONTROL(QMGR) +
   PORT(1423) +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
   REPLACE
DEFINE LISTENER('SYSTEM.DEFAULT.LISTENER.TCP') TRPTYPE(TCP) CONTROL(MANUAL) +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
   REPLACE
DEFINE SERVICE('SYSTEM.DEFAULT.SERVICE') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
   REPLACE
DEFINE COMMINFO('SYSTEM.DEFAULT.COMMINFO.MULTICAST') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
   GRPADDR('239.0.0.0') +
   PORT(1414) +
   REPLACE
DEFINE TOPIC('CX.AODB.EODS.AR') +
   TOPICSTR('/CX/FlightOperations/OperationServices/FlightEvent/V1.0/AODBChangeAR') +
   DESCR('AppID:0507 4CNRS Interface 008') +
   PUB(ENABLED) +
   SUB(ENABLED) +
   DEFPSIST(YES) +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19.48.20) +
   PMSGDLV(ALL) +
   NPMSGDLV(ALL) +
   PUBSCOPE(ALL) +
   SUBSCOPE(ALL) +
   REPLACE
DEFINE TOPIC('FLTOPS_ACT_TAKEOFF_V2') +
   TOPICSTR('/CX/FlightOperations/OperationServices/FlightEvent/V2.0/TimeChange/ActualTakeoff') +
   DESCR('AppID:0507 4CNRS Interface 005/006/007') +
   PUB(ENABLED) +
   SUB(ENABLED) +
   DEFPSIST(YES) +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19.48.20) +
   PMSGDLV(ALL) +
   NPMSGDLV(ALL) +
   PUBSCOPE(ALL) +
   SUBSCOPE(ALL) +
   REPLACE
DEFINE TOPIC('FLTOPS_ACT_TOUCHDOWN_V2') +
   TOPICSTR('/CX/FlightOperations/OperationServices/FlightEvent/V2.0/TimeChange/ActualTouchdown') +
   DESCR('AppID:0507 4CNRS Interface 005/006/007') +
   PUB(ENABLED) +
   SUB(ENABLED) +
   DEFPSIST(YES) +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19.48.20) +
   PMSGDLV(ALL) +
   NPMSGDLV(ALL) +
   PUBSCOPE(ALL) +
   SUBSCOPE(ALL) +
   REPLACE
DEFINE TOPIC('FLTOPS_ATACHG_V2') +
   TOPICSTR('/CX/FlightOperations/OperationServices/FlightEvent/V2.0/TimeChange/ActualArrival') +
   DESCR('AppID:0507 4CNRS Interface 005/006/007') +
   PUB(ENABLED) +
   SUB(ENABLED) +
   DEFPSIST(YES) +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19.48.20) +
   PMSGDLV(ALL) +
   NPMSGDLV(ALL) +
   PUBSCOPE(ALL) +
   SUBSCOPE(ALL) +
   REPLACE
DEFINE TOPIC('FLTOPS_ATDCHG_V2') +
   TOPICSTR('/CX/FlightOperations/OperationServices/FlightEvent/V2.0/TimeChange/ActualDeparture') +
   DESCR('AppID:0507 4CNRS Interface 005/006/007') +
   PUB(ENABLED) +
   SUB(ENABLED) +
   DEFPSIST(YES) +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19.48.20) +
   PMSGDLV(ALL) +
   NPMSGDLV(ALL) +
   PUBSCOPE(ALL) +
   SUBSCOPE(ALL) +
   REPLACE
DEFINE TOPIC('FLTOPS_BAYCHG') +
   TOPICSTR('/CX/FlightOperations/OperationServices/FlightEvent/V1.0/BayChange') +
   DESCR('AppID:0507 4CNRS Interface 008:Airport Res Chg') +
   PUB(ENABLED) +
   SUB(ENABLED) +
   DEFPSIST(YES) +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19.48.20) +
   PMSGDLV(ALL) +
   NPMSGDLV(ALL) +
   PUBSCOPE(ALL) +
   SUBSCOPE(ALL) +
   REPLACE
DEFINE TOPIC('FLTOPS_BELTCHG') +
   TOPICSTR('/CX/FlightOperations/OperationServices/FlightEvent/V1.0/BaggageClaimUnitChange') +
   DESCR('AppID:0507 4CNRS Interface 008:Airport Res Chg') +
   PUB(ENABLED) +
   SUB(ENABLED) +
   DEFPSIST(YES) +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19.48.20) +
   PMSGDLV(ALL) +
   NPMSGDLV(ALL) +
   PUBSCOPE(ALL) +
   SUBSCOPE(ALL) +
   REPLACE
DEFINE TOPIC('FLTOPS_CANCEL') +
   TOPICSTR('/CX/FlightOperations/OperationServices/FlightEvent/V1.0/FlightLegCancel') +
   DESCR('AppID:0507 4CNRS Interface 005/006/007:FDM D34/ENG/FSS') +
   PUB(ENABLED) +
   SUB(ENABLED) +
   DEFPSIST(YES) +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19.48.20) +
   PMSGDLV(ALL) +
   NPMSGDLV(ALL) +
   PUBSCOPE(ALL) +
   SUBSCOPE(ALL) +
   REPLACE
DEFINE TOPIC('FLTOPS_EST_TAKEOFF_V2') +
   TOPICSTR('/CX/FlightOperations/OperationServices/FlightEvent/V2.0/TimeChange/EstimatedTakeoff') +
   DESCR('AppID:0507 4CNRS Interface 005/006/007:FDM D34/ENG/FSS') +
   PUB(ENABLED) +
   SUB(ENABLED) +
   DEFPSIST(YES) +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19.48.20) +
   PMSGDLV(ALL) +
   NPMSGDLV(ALL) +
   PUBSCOPE(ALL) +
   SUBSCOPE(ALL) +
   REPLACE
DEFINE TOPIC('FLTOPS_EST_TOUCHDOWN_V2') +
   TOPICSTR('/CX/FlightOperations/OperationServices/FlightEvent/V2.0/TimeChange/EstimatedTouchdown') +
   DESCR('AppID:0507 4CNRS Interface 005/006/007:FDM D34/ENG/FSS') +
   PUB(ENABLED) +
   SUB(ENABLED) +
   DEFPSIST(YES) +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19.48.20) +
   PMSGDLV(ALL) +
   NPMSGDLV(ALL) +
   PUBSCOPE(ALL) +
   SUBSCOPE(ALL) +
   REPLACE
DEFINE TOPIC('FLTOPS_ETACHG_V2') +
   TOPICSTR('/CX/FlightOperations/OperationServices/FlightEvent/V2.0/TimeChange/EstimatedArrival') +
   DESCR('AppID:0507 4CNRS Interface 005/006/007:FDM D34/ENG/FSS') +
   PUB(ENABLED) +
   SUB(ENABLED) +
   DEFPSIST(YES) +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19.48.20) +
   PMSGDLV(ALL) +
   NPMSGDLV(ALL) +
   PUBSCOPE(ALL) +
   SUBSCOPE(ALL) +
   REPLACE
DEFINE TOPIC('FLTOPS_ETDCHG_V2') +
   TOPICSTR('/CX/FlightOperations/OperationServices/FlightEvent/V2.0/TimeChange/EstimatedDeparture') +
   DESCR('AppID:0507 4CNRS Interface 005/006/007:FDM D34/ENG/FSS') +
   PUB(ENABLED) +
   SUB(ENABLED) +
   DEFPSIST(YES) +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19.48.20) +
   PMSGDLV(ALL) +
   NPMSGDLV(ALL) +
   PUBSCOPE(ALL) +
   SUBSCOPE(ALL) +
   REPLACE
DEFINE TOPIC('FLTOPS_FLTCHG') +
   TOPICSTR('/CX/FlightOperations/OperationServices/FlightEvent/V1.0/FlightChange') +
   DESCR('AppID:0507 4CNRS Interface 005/006/007/008') +
   PUB(ENABLED) +
   SUB(ENABLED) +
   DEFPSIST(YES) +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19.48.20) +
   PMSGDLV(ALL) +
   NPMSGDLV(ALL) +
   PUBSCOPE(ALL) +
   SUBSCOPE(ALL) +
   REPLACE
DEFINE TOPIC('FLTOPS_GATECHG') +
   TOPICSTR('/CX/FlightOperations/OperationServices/FlightEvent/V1.0/GateChange') +
   DESCR('AppID:0507 4CNRS Interface 008:Airport Res Chg') +
   PUB(ENABLED) +
   SUB(ENABLED) +
   DEFPSIST(YES) +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19.48.20) +
   PMSGDLV(ALL) +
   NPMSGDLV(ALL) +
   PUBSCOPE(ALL) +
   SUBSCOPE(ALL) +
   REPLACE
DEFINE TOPIC('FLTOPS_NEW') +
   TOPICSTR('/CX/FlightOperations/OperationServices/FlightEvent/V1.0/FlightLegCreate') +
   DESCR('AppID:0507 4CNRS Interface 005/006/007:FDM D34/ENG/FSS') +
   PUB(ENABLED) +
   SUB(ENABLED) +
   DEFPSIST(YES) +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19.48.20) +
   PMSGDLV(ALL) +
   NPMSGDLV(ALL) +
   PUBSCOPE(ALL) +
   SUBSCOPE(ALL) +
   REPLACE
DEFINE TOPIC('FLTOPS_PAXCOUNT') +
   TOPICSTR('/CX/FlightOperations/OperationServices/FlightEvent/V1.0/PaxCount') +
   DESCR('AppID:0507 4CNRS Interface 010:Pax Count') +
   PUB(ENABLED) +
   SUB(ENABLED) +
   DEFPSIST(YES) +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19.48.20) +
   PMSGDLV(ALL) +
   NPMSGDLV(ALL) +
   PUBSCOPE(ALL) +
   SUBSCOPE(ALL) +
   REPLACE
DEFINE TOPIC('FLTOPS_REINSTATE') +
   TOPICSTR('/CX/FlightOperations/OperationServices/FlightEvent/V1.0/FlightLegReinstate') +
   DESCR('AppID:0507 4CNRS Interface 005/006/007:FDM D34/ENG/FSS') +
   PUB(ENABLED) +
   SUB(ENABLED) +
   DEFPSIST(YES) +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19.48.20) +
   PMSGDLV(ALL) +
   NPMSGDLV(ALL) +
   PUBSCOPE(ALL) +
   SUBSCOPE(ALL) +
   REPLACE
DEFINE TOPIC('FLTOPS_STACHG_V2') +
   TOPICSTR('/CX/FlightOperations/OperationServices/FlightEvent/V2.0/TimeChange/ScheduleArrival') +
   DESCR('AppID:0507 4CNRS Interface 005/006/007:FDM D34/ENG/FSS') +
   PUB(ENABLED) +
   SUB(ENABLED) +
   DEFPSIST(YES) +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19.48.20) +
   PMSGDLV(ALL) +
   NPMSGDLV(ALL) +
   PUBSCOPE(ALL) +
   SUBSCOPE(ALL) +
   REPLACE
DEFINE TOPIC('FLTOPS_STDCHG_V2') +
   TOPICSTR('/CX/FlightOperations/OperationServices/FlightEvent/V2.0/TimeChange/ScheduleDeparture') +
   DESCR('AppID:0507 4CNRS Interface 005/006/007:FDM D34/ENG/FSS') +
   PUB(ENABLED) +
   SUB(ENABLED) +
   DEFPSIST(YES) +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19.48.20) +
   PMSGDLV(ALL) +
   NPMSGDLV(ALL) +
   PUBSCOPE(ALL) +
   SUBSCOPE(ALL) +
   REPLACE
DEFINE TOPIC('FLTOPS_TAILCHG_V2') +
   TOPICSTR('/CX/FlightOperations/OperationServices/FlightEvent/V2.0/TailChange') +
   DESCR('AppID:0507 4CNRS Interface 005/006/007') +
   PUB(ENABLED) +
   SUB(ENABLED) +
   DEFPSIST(YES) +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19.48.20) +
   PMSGDLV(ALL) +
   NPMSGDLV(ALL) +
   PUBSCOPE(ALL) +
   SUBSCOPE(ALL) +
   REPLACE
DEFINE TOPIC('SYSTEM.BASE.TOPIC') +
   TOPICSTR('') +
   DESCR('Base topic for resolving attributes') +
   DURSUB(YES) +
   PUB(ENABLED) +
   SUB(ENABLED) +
   DEFPSIST(NO) +
   DEFPRTY(0) +
   DEFPRESP(SYNC) +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.12.28) +
   PMSGDLV(ALLDUR) +
   NPMSGDLV(ALLAVAIL) +
   PUBSCOPE(ALL) +
   SUBSCOPE(ALL) +
   MDURMDL('SYSTEM.DURABLE.MODEL.QUEUE') +
   MNDURMDL('SYSTEM.NDURABLE.MODEL.QUEUE') +
   MCAST(DISABLED) +
   COMMINFO('SYSTEM.DEFAULT.COMMINFO.MULTICAST') +
   USEDLQ(YES) +
   REPLACE
DEFINE TOPIC('SYSTEM.BROKER.ADMIN.STREAM') +
   TOPICSTR('SYSTEM.BROKER.ADMIN.STREAM') +
   DESCR('Admin stream for queued Pub/Sub interface') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.12.28) +
   WILDCARD(BLOCK) +
   MCAST(DISABLED) +
   REPLACE
DEFINE TOPIC('SYSTEM.BROKER.DEFAULT.STREAM') +
   TOPICSTR('') +
   DESCR('Default stream for queued Pub/Sub interface') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.12.28) +
   WILDCARD(BLOCK) +
   MCAST(DISABLED) +
   REPLACE
DEFINE TOPIC('SYSTEM.BROKER.DEFAULT.SUBPOINT') +
   TOPICSTR('') +
   DESCR('Default RFH2 subscription point for queued Pub/Sub interface') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.12.28) +
   WILDCARD(BLOCK) +
   MCAST(DISABLED) +
   REPLACE
DEFINE TOPIC('SYSTEM.DEFAULT.TOPIC') +
   TOPICSTR('') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.12.28) +
   REPLACE
DEFINE SUB('CX.FLTCHG.NRSHAS') +
   TOPICSTR('/CX/FlightOperations/OperationServices/FlightEvent/V1.0/FlightChange') +
*  DISTYPE(DEFINED) +
   PUBACCT(0332363000000000000000000000000000000000000000000000000000000006) +
   DEST('EODS.NRSHAS.FLTEVENT') +
   DESTQMGR('MQPD3') +
   DESTCORL(414D51204D515431332020202020202022CA3A570B360C20) +
*  SUBTYPE(ADMIN) +
   SUBUSER('mqm') +
*  CRDATE(2016-11-03) +
*  CRTIME(19:48:20) +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19:48:20) +
   REPLACE
DEFINE SUB('CX.PAXCOUNT.NRSHAS.PROD2ETE') +
   TOPICSTR('/CX/FlightOperations/OperationServices/FlightEvent/V1.0/PaxCount') +
*  DISTYPE(DEFINED) +
   PUBACCT(0332363000000000000000000000000000000000000000000000000000000006) +
   DEST('EODS.NRSHAS.FLTEVENT.PROD2ETE') +
   DESTQMGR('MQPD3') +
   DESTCORL(414D51204D515431332020202020202022CA3A5717360C20) +
*  SUBTYPE(ADMIN) +
   SUBUSER('mqm') +
*  CRDATE(2016-11-03) +
*  CRTIME(19:48:20) +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19:48:20) +
   REPLACE
DEFINE SUB('CX.AODB.EODS.AR.IN') +
   TOPICSTR('/CX/FlightOperations/OperationServices/FlightEvent/V1.0/AODBChangeAR') +
*  DISTYPE(DEFINED) +
   DEST('AODB.EODS.AR.IN') +
   DESTCORL(414D51204D51504433202020202020202FD4B957B2D09023) +
*  SUBTYPE(ADMIN) +
   SUBUSER('mqm') +
*  CRDATE(2016-11-04) +
*  CRTIME(15:14:01) +
*  ALTDATE(2016-11-04) +
*  ALTTIME(15:14:01) +
   REPLACE
DEFINE SUB('CX.PAXCOUNT.NRS') +
   TOPICSTR('/CX/FlightOperations/OperationServices/FlightEvent/V1.0/PaxCount') +
*  DISTYPE(DEFINED) +
   PUBACCT(0332363000000000000000000000000000000000000000000000000000000006) +
   DEST('EODS.NRS.FLTEVENT') +
   DESTQMGR('MQPD3') +
   DESTCORL(414D51204D515431332020202020202022CA3A5711360C20) +
*  SUBTYPE(ADMIN) +
   SUBUSER('mqm') +
*  CRDATE(2016-11-03) +
*  CRTIME(19:48:20) +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19:48:20) +
   REPLACE
DEFINE SUB('CX.PAXCOUNT.NRS.PROD2ETE') +
   TOPICSTR('/CX/FlightOperations/OperationServices/FlightEvent/V1.0/PaxCount') +
*  DISTYPE(DEFINED) +
   PUBACCT(0332363000000000000000000000000000000000000000000000000000000006) +
   DEST('EODS.NRS.FLTEVENT.PROD2ETE') +
   DESTQMGR('MQPD3') +
   DESTCORL(414D51204D515431332020202020202022CA3A5717360C20) +
*  SUBTYPE(ADMIN) +
   SUBUSER('mqm') +
*  CRDATE(2016-11-03) +
*  CRTIME(19:48:20) +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19:48:20) +
   REPLACE
DEFINE SUB('CX.PAXCOUNT.NRSHAS') +
   TOPICSTR('/CX/FlightOperations/OperationServices/FlightEvent/V1.0/PaxCount') +
*  DISTYPE(DEFINED) +
   PUBACCT(0332363000000000000000000000000000000000000000000000000000000006) +
   DEST('EODS.NRSHAS.FLTEVENT') +
   DESTQMGR('MQPD3') +
   DESTCORL(414D51204D515431332020202020202022CA3A5717360C20) +
*  SUBTYPE(ADMIN) +
   SUBUSER('mqm') +
*  CRDATE(2016-11-03) +
*  CRTIME(19:48:20) +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19:48:20) +
   REPLACE
DEFINE SUB('CX.FLTCHG.EODS') +
   TOPICSTR('/CX/FlightOperations/OperationServices/FlightEvent/V1.0/FlightChange') +
*  DISTYPE(DEFINED) +
   PUBACCT(0332363000000000000000000000000000000000000000000000000000000006) +
   DEST('EODS.FLTCHG.TEMP') +
   DESTQMGR('MQPD3') +
   DESTCORL(414D51204D515431332020202020202022CA3A5717360C20) +
*  SUBTYPE(ADMIN) +
   SUBUSER('mqm') +
*  CRDATE(2016-11-03) +
*  CRTIME(19:48:20) +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19:48:20) +
   REPLACE
DEFINE SUB('CX.PAXCOUNT.EODS') +
   TOPICSTR('/CX/FlightOperations/OperationServices/FlightEvent/V1.0/PaxCount') +
*  DISTYPE(DEFINED) +
   PUBACCT(0332363000000000000000000000000000000000000000000000000000000006) +
   DEST('EODS.PAXCOUNT.IN') +
   DESTQMGR('MQPD3') +
   DESTCORL(414D51204D5154313320202020202020C866FE560C0E0620) +
*  SUBTYPE(ADMIN) +
   SUBUSER('mqm') +
*  CRDATE(2016-11-03) +
*  CRTIME(19:48:20) +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19:48:20) +
   REPLACE
DEFINE SUB('SYSTEM.DEFAULT.SUB') +
   TOPICSTR('') +
*  DISTYPE(DEFINED) +
*  SUBTYPE(ADMIN) +
*  CRDATE(2016-04-27) +
*  CRTIME(16:12:28) +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16:12:28) +
   REPLACE
DEFINE SUB('CX.FLTCHG.NRS.PROD2ETE') +
   TOPICSTR('/CX/FlightOperations/OperationServices/FlightEvent/V1.0/FlightChange') +
*  DISTYPE(DEFINED) +
   PUBACCT(0332363000000000000000000000000000000000000000000000000000000006) +
   DEST('EODS.NRS.FLTEVENT.PROD2ETE') +
   DESTQMGR('MQPD3') +
   DESTCORL(414D51204D515431332020202020202022CA3A5717360C20) +
*  SUBTYPE(ADMIN) +
   SUBUSER('mqm') +
*  CRDATE(2016-11-03) +
*  CRTIME(19:48:20) +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19:48:20) +
   REPLACE
DEFINE SUB('CX.AODB.EODS.AR.TEMP') +
   TOPICSTR('/CX/FlightOperations/OperationServices/FlightEvent/V1.0/AODBChangeAR') +
*  DISTYPE(DEFINED) +
   PUBACCT(0332363000000000000000000000000000000000000000000000000000000006) +
   DEST('AODB.EODS.AR.TEMP') +
   DESTQMGR('MQPD3') +
   DESTCORL(414D51204D515431332020202020202022CA3A5717360C20) +
*  SUBTYPE(ADMIN) +
   SUBUSER('mqm') +
*  CRDATE(2016-11-03) +
*  CRTIME(19:48:20) +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19:48:20) +
   REPLACE
DEFINE SUB('CX.FLTCHG.NRSHAS.PROD2ETE') +
   TOPICSTR('/CX/FlightOperations/OperationServices/FlightEvent/V1.0/FlightChange') +
*  DISTYPE(DEFINED) +
   PUBACCT(0332363000000000000000000000000000000000000000000000000000000006) +
   DEST('EODS.NRSHAS.FLTEVENT.PROD2ETE') +
   DESTQMGR('MQPD3') +
   DESTCORL(414D51204D515431332020202020202022CA3A5717360C20) +
*  SUBTYPE(ADMIN) +
   SUBUSER('mqm') +
*  CRDATE(2016-11-03) +
*  CRTIME(19:48:20) +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19:48:20) +
   REPLACE
DEFINE SUB('CX.FLTCHG.NRS') +
   TOPICSTR('/CX/FlightOperations/OperationServices/FlightEvent/V1.0/FlightChange') +
*  DISTYPE(DEFINED) +
   PUBACCT(0332363000000000000000000000000000000000000000000000000000000006) +
   DEST('EODS.NRS.FLTEVENT') +
   DESTQMGR('MQPD3') +
   DESTCORL(414D51204D515431332020202020202022CA3A5705360C20) +
*  SUBTYPE(ADMIN) +
   SUBUSER('mqm') +
*  CRDATE(2016-11-03) +
*  CRTIME(19:48:20) +
*  ALTDATE(2016-11-03) +
*  ALTTIME(19:48:20) +
   REPLACE
SET CHLAUTH('SYSTEM.ADMIN.SVRCONN') +
   TYPE(ADDRESSMAP) +
   DESCR('Default rule to allow MQ Explorer access') +
   ADDRESS('*') +
   USERSRC(CHANNEL) +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
   ACTION(REPLACE)
SET CHLAUTH('SYSTEM.*') +
   TYPE(ADDRESSMAP) +
   DESCR('Default rule to disable all SYSTEM channels') +
   ADDRESS('*') +
   USERSRC(NOACCESS) +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
   ACTION(REPLACE)
SET CHLAUTH('*') +
   TYPE(BLOCKUSER) +
   DESCR('Default rule to disallow privileged users') +
   USERLIST('*MQADMIN') +
*  ALTDATE(2016-04-27) +
*  ALTTIME(16.45.59) +
   ACTION(REPLACE)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.INTER.BROKER.COMMUNICATIONS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADMIN.STREAM') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.CLUSRCVR') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.MQSC.REPLY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AODB.EODS.AR.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AODB.EODS.AR.IN') +
   GROUP('etl') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,GET,INQ,PUT)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.COMMAND.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADMIN.STREAM') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('SYSTEM.JMS.ND.SUBSCRIBER.WILY.MBMSGFLOW') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('PIP.ETL.SBRFEED.XML.STG.EN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('PIP.ETL.SBRFEED.XML.STG.EN') +
   GROUP('etl') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,GET,INQ,PUT)
SET AUTHREC +
   PROFILE('FLTOPS_ETDCHG_V2') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('FLTOPS_ETACHG_V2') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('PIP.ETL.SBRFEED.XML.STG.ODS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('PIP.ETL.SBRFEED.XML.STG.ODS') +
   GROUP('etl') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,GET,INQ,PUT)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.QMGR.EVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.QMGR.EVENT') +
   GROUP('apmpoc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.PROTECTION.POLICY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.SERVER') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('FLTOPS_EST_TOUCHDOWN_V2') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.AUTHINFO.CRLLDAP') +
   GROUP('mqm') +
   OBJTYPE(AUTHINFO) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('FLTOPS_BELTCHG') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('FLTOPS_STDCHG_V2') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('FLTOPS_STACHG_V2') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('SYSTEM.RETAINED.PUB.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.TRACE.ROUTE.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('FLTOPS_BAYCHG') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('SYSTEM.INTER.QMGR.CONTROL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('FLTOPS_PAXCOUNT') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('SYSTEM.JMS.D.CC.SUBSCRIBER.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQPD3.CXIPETL') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.DURABLE.SUBSCRIBER.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.JMS.ND.SUBSCRIBER.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.INTER.QMGR.FANREQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.PROCESS') +
   GROUP('mqm') +
   OBJTYPE(PROCESS) +
   AUTHADD(CHG,DLT,DSP,INQ,SET)
SET AUTHREC +
   PROFILE('SYSTEM.DURABLE.MODEL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AODB.EODS.AR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.HIERARCHY.STATE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQ70PD1.TO.MQPD3') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('FLTOPS_TAILCHG_V2') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('MQPD3.TCP') +
   GROUP('mqm') +
   OBJTYPE(LISTENER) +
   AUTHADD(CHG,DLT,DSP,CTRL)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.TOPIC') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.TOPIC') +
   GROUP('netline') +
   OBJTYPE(TOPIC) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('AODB.EODS.AR.RECOVERY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AODB.EODS.AR.RECOVERY') +
   GROUP('etl') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,GET,INQ,PUT)
SET AUTHREC +
   PROFILE('EODS.FI.EVENT.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EODS.FI.EVENT.OUT') +
   GROUP('etl') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,INQ,PUT)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.COMMAND.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.COMMAND.QUEUE') +
   GROUP('apmpoc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.CONTROL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EODS.FI.FDMSMP.EVENT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EODS.FI.FDMSMP.EVENT.IN') +
   GROUP('etl') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,GET,INQ,PUT)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.SERVICE') +
   GROUP('mqm') +
   OBJTYPE(SERVICE) +
   AUTHADD(CHG,DLT,DSP,CTRL)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.DEFAULT.STREAM') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.QPUBSUB.SUBPOINT.NAMELIST') +
   GROUP('mqm') +
   OBJTYPE(NAMELIST) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('FLTOPS_ATDCHG_V2') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('FLTOPS_ATACHG_V2') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('SYSTEM.QPUBSUB.QUEUE.NAMELIST') +
   GROUP('mqm') +
   OBJTYPE(NAMELIST) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.JMS.D.SUBSCRIBER.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('FLTOPS_ACT_TOUCHDOWN_V2') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.TRACE.ACTIVITY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EODS.FLTCHG.TEMP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.PUBSUB.EVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.DEFAULT.STREAM') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.SENDER') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.SENDER') +
   GROUP('cep') +
   OBJTYPE(CHANNEL) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('FLTOPS_ACT_TAKEOFF_V2') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('FLTOPS_CANCEL') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('SYSTEM.CICS.INITIATION.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('PIP.1A.SBRFEED.XML') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EODS.NRS.PAXCOUNT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.NDURABLE.MODEL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CHANNEL.INITQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQPD3.0414.ETL') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('FBX.IPIL.SEARCHPNRDETAIL.V2') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.NAMELIST') +
   GROUP('mqm') +
   OBJTYPE(NAMELIST) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.INITIATION.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQPD3.IPIL') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('IIBQMPD4.TO.MQPD3') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.JMS.ADMIN.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IIBQMPD1.TO.MQPD3') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('MQ70PD1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.INTERNAL.REQUEST.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('PIP.ETL.SBRFEED.XML.STG.ODS2') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('PIP.ETL.SBRFEED.XML.STG.ODS2') +
   GROUP('etl') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,GET,INQ,PUT)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.REPOSITORY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('CX.AODB.EODS.AR') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.AUTHINFO.IDPWOS') +
   GROUP('mqm') +
   OBJTYPE(AUTHINFO) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.MODEL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.MODEL.QUEUE') +
   GROUP('apmpoc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET)
SET AUTHREC +
   PROFILE('MQPD3.TO.IIBQMPD2') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.LOGGER.EVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.ACCOUNTING.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEAD.LETTER.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEAD.LETTER.QUEUE') +
   GROUP('apmpoc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.PENDING.DATA.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.LOCAL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.LOCAL.QUEUE') +
   GROUP('cep') +
   OBJTYPE(QUEUE) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.LOCAL.QUEUE') +
   GROUP('inframws') +
   OBJTYPE(QUEUE) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.LOCAL.QUEUE') +
   GROUP('olgm') +
   OBJTYPE(QUEUE) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.LOCAL.QUEUE') +
   GROUP('pros') +
   OBJTYPE(QUEUE) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.LOCAL.QUEUE') +
   GROUP('netline') +
   OBJTYPE(QUEUE) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.LOCAL.QUEUE') +
   GROUP('etl') +
   OBJTYPE(QUEUE) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.LOCAL.QUEUE') +
   GROUP('ultra') +
   OBJTYPE(QUEUE) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.LOCAL.QUEUE') +
   GROUP('root') +
   OBJTYPE(QUEUE) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.LOCAL.QUEUE') +
   GROUP('ipilapp') +
   OBJTYPE(QUEUE) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.AUTHINFO.IDPWLDAP') +
   GROUP('mqm') +
   OBJTYPE(AUTHINFO) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('FLTOPS_EST_TAKEOFF_V2') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('MQPD3_DLQ') +
   GROUP('ipilapp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,GET,INQ,PUT,PASSALL)
SET AUTHREC +
   PROFILE('SYSTEM.JMS.PS.STATUS.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('PIP.ETL.SBRFEED.XML') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('PIP.ETL.SBRFEED.XML') +
   GROUP('etl') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,GET,INQ,PUT)
SET AUTHREC +
   PROFILE('SYSTEM.AUTO.RECEIVER') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('MQPD3.0414NRS.C') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.REQUESTER') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('EODS.NRSHAS.PAXCOUNT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.RECEIVER') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('FLTOPS_REINSTATE') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('SYSTEM.MQEXPLORER.REPLY.MODEL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AODB.EODS.AR.TEMP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IIBQMPD2') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DDELAY.LOCAL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.COMMINFO.MULTICAST') +
   GROUP('mqm') +
   OBJTYPE(COMMINFO) +
   AUTHADD(CHG,DLT,DSP)
SET AUTHREC +
   PROFILE('self') +
   GROUP('mqm') +
   OBJTYPE(QMGR) +
   AUTHADD(ALTUSR,CHG,CONNECT,DLT,DSP,INQ,SET,SETALL,SETID,CTRL,SYSTEM)
SET AUTHREC +
   PROFILE('self') +
   GROUP('cep') +
   OBJTYPE(QMGR) +
   AUTHADD(CONNECT,DSP,INQ,SETALL)
SET AUTHREC +
   PROFILE('self') +
   GROUP('apmpoc') +
   OBJTYPE(QMGR) +
   AUTHADD(CONNECT,DSP,INQ)
SET AUTHREC +
   PROFILE('self') +
   GROUP('olgm') +
   OBJTYPE(QMGR) +
   AUTHADD(CONNECT,INQ)
SET AUTHREC +
   PROFILE('self') +
   GROUP('pros') +
   OBJTYPE(QMGR) +
   AUTHADD(CONNECT,INQ)
SET AUTHREC +
   PROFILE('self') +
   GROUP('netline') +
   OBJTYPE(QMGR) +
   AUTHADD(CONNECT,INQ)
SET AUTHREC +
   PROFILE('self') +
   GROUP('etl') +
   OBJTYPE(QMGR) +
   AUTHADD(CONNECT,INQ)
SET AUTHREC +
   PROFILE('self') +
   GROUP('ultra') +
   OBJTYPE(QMGR) +
   AUTHADD(CONNECT,INQ)
SET AUTHREC +
   PROFILE('self') +
   GROUP('ipilapp') +
   OBJTYPE(QMGR) +
   AUTHADD(CONNECT,INQ,SETALL)
SET AUTHREC +
   PROFILE('self') +
   GROUP('nrs') +
   OBJTYPE(QMGR) +
   AUTHADD(CONNECT,INQ)
SET AUTHREC +
   PROFILE('self') +
   GROUP('nrshas') +
   OBJTYPE(QMGR) +
   AUTHADD(CONNECT,INQ)
SET AUTHREC +
   PROFILE('self') +
   GROUP('has') +
   OBJTYPE(QMGR) +
   AUTHADD(CONNECT,INQ)
SET AUTHREC +
   PROFILE('self') +
   GROUP('aptscs') +
   OBJTYPE(QMGR) +
   AUTHADD(CONNECT,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.COMMAND.EVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IIBQMPD2.TO.MQPD3') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('EODS.PAXCOUNT.STG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EODS.PAXCOUNT.STG') +
   GROUP('etl') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,GET,INQ,PUT)
SET AUTHREC +
   PROFILE('SYSTEM.JMS.ND.SUBSCRIBER.WILY.MBBROKER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.JMS.ND.CC.SUBSCRIBER.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.SELECTION.VALIDATION.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CHLAUTH.DATA.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(CLNTCONN) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('apmpoc') +
   OBJTYPE(CLNTCONN) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('SYSTEM.INTER.QMGR.PUBS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.DEFAULT.SUBPOINT') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('SYSTEM.MESSAGE.ASSOCIATION.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.JMS.REPORT.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('FLTOPS_NEW') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('EODS.FI.AODB.EVENT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EODS.FI.AODB.EVENT.IN') +
   GROUP('etl') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,GET,INQ,PUT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(RQMNAME) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.ACTIVITY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.ACTIVITY.QUEUE') +
   GROUP('apmpoc') +
   OBJTYPE(QUEUE) +
   AUTHADD(DSP,GET,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.DOTNET.XARECOVERY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('apmpoc') +
   OBJTYPE(QUEUE) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('cep') +
   OBJTYPE(QUEUE) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('inframws') +
   OBJTYPE(QUEUE) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('olgm') +
   OBJTYPE(QUEUE) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('pros') +
   OBJTYPE(QUEUE) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('netline') +
   OBJTYPE(QUEUE) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('etl') +
   OBJTYPE(QUEUE) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('ultra') +
   OBJTYPE(QUEUE) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('root') +
   OBJTYPE(QUEUE) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mw_adm') +
   OBJTYPE(QUEUE) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('nobody') +
   OBJTYPE(QUEUE) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('ipilapp') +
   OBJTYPE(QUEUE) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('nrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('aptscs') +
   OBJTYPE(QUEUE) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('gorms') +
   OBJTYPE(QUEUE) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('nrshas') +
   OBJTYPE(QUEUE) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('has') +
   OBJTYPE(QUEUE) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('SYSTEM.JMS.MODEL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(NAMELIST) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('apmpoc') +
   OBJTYPE(NAMELIST) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('EODS.FI.FDMD34.EVENT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EODS.FI.FDMD34.EVENT.IN') +
   GROUP('etl') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,GET,INQ,PUT)
SET AUTHREC +
   PROFILE('SYSTEM.CHANNEL.SYNCQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(PROCESS) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('apmpoc') +
   OBJTYPE(PROCESS) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('PIP.EVENT.SBRFEED.ROUTE.IN.TMP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('PIP.EVENT.SBRFEED.ROUTE.IN.TMP') +
   GROUP('etl') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,GET,INQ,PUT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(QMGR) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('cep') +
   OBJTYPE(QMGR) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('apmpoc') +
   OBJTYPE(QMGR) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('olgm') +
   OBJTYPE(QMGR) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('pros') +
   OBJTYPE(QMGR) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('netline') +
   OBJTYPE(QMGR) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('etl') +
   OBJTYPE(QMGR) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('ultra') +
   OBJTYPE(QMGR) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('ipilapp') +
   OBJTYPE(QMGR) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('nrs') +
   OBJTYPE(QMGR) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('nrshas') +
   OBJTYPE(QMGR) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('has') +
   OBJTYPE(QMGR) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('aptscs') +
   OBJTYPE(QMGR) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('cep') +
   OBJTYPE(CHANNEL) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('apmpoc') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('MQPD3.TO.BK70QMPD1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(AUTHINFO) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('apmpoc') +
   OBJTYPE(AUTHINFO) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('netline') +
   OBJTYPE(TOPIC) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('apmpoc') +
   OBJTYPE(TOPIC) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('PIP.EVENT.SBRFEED.ROUTE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('PIP.EVENT.SBRFEED.ROUTE.IN') +
   GROUP('etl') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,GET,INQ,PUT)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.STATISTICS.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.PROTECTION.ERROR.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(COMMINFO) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('apmpoc') +
   OBJTYPE(COMMINFO) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.CLNTCONN') +
   GROUP('mqm') +
   OBJTYPE(CLNTCONN) +
   AUTHADD(CHG,DLT,DSP)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.CLUSSDR') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.REMOTE.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(LISTENER) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('apmpoc') +
   OBJTYPE(LISTENER) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('EODS.NRS.FLTEVENT.PROD2ETE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EODS.NRS.FLTEVENT.PROD2ETE') +
   GROUP('etl') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,GET,INQ)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(SERVICE) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('apmpoc') +
   OBJTYPE(SERVICE) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('BK70QMPD1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EODS.FI.EVENT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EODS.FI.EVENT.IN') +
   GROUP('etl') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,GET,INQ,PUT)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.ALIAS.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.AUTO.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.AUTH.DATA.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.AUTHINFO.OCSP') +
   GROUP('mqm') +
   OBJTYPE(AUTHINFO) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('EODS.FI.NLSSM.EVENT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EODS.FI.NLSSM.EVENT.IN') +
   GROUP('etl') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,GET,INQ,PUT)
SET AUTHREC +
   PROFILE('IIBQMPD3.TO.MQPD3') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.SELECTION.EVALUATION.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.HISTORY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.JMS.TEMPQ.MODEL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.CONFIG.EVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EODS.NRSHAS.FLTEVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EODS.NRSHAS.FLTEVENT') +
   GROUP('nrshas') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,GET,INQ)
SET AUTHREC +
   PROFILE('EODS.NRSHAS.FLTEVENT') +
   GROUP('has') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,GET,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.TRANSMIT.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('FLTOPS_GATECHG') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('SYSTEM.INTERNAL.REPLY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EODS.NRS.FLTEVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EODS.NRS.FLTEVENT') +
   GROUP('nrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,GET,INQ)
SET AUTHREC +
   PROFILE('EODS.NRS.FLTEVENT') +
   GROUP('aptscs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,GET,INQ)
SET AUTHREC +
   PROFILE('EODS.NRS.FLTEVENT') +
   GROUP('gorms') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,GET,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.BASE.TOPIC') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.PERFM.EVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.PERFM.EVENT') +
   GROUP('apmpoc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.LISTENER.TCP') +
   GROUP('mqm') +
   OBJTYPE(LISTENER) +
   AUTHADD(CHG,DLT,DSP,CTRL)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.TRANSMIT.MODEL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQPD3.0414NRSHAS.C') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('EODS.FI.FDMOWP.EVENT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EODS.FI.FDMOWP.EVENT.IN') +
   GROUP('etl') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,GET,INQ,PUT)
SET AUTHREC +
   PROFILE('x') +
   GROUP('nobody') +
   OBJTYPE(QUEUE) +
   AUTHADD(PUT)
SET AUTHREC +
   PROFILE('FLTOPS_FLTCHG') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('EODS.PAXCOUNT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EODS.PAXCOUNT.IN') +
   GROUP('etl') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,GET,INQ,PUT)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.CHANNEL.EVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.CHANNEL.EVENT') +
   GROUP('apmpoc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ)
SET AUTHREC +
   PROFILE('FBX.IPIL.SEARCHPNRDETAIL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('FBX.IPIL.SEARCHPNRDETAIL') +
   GROUP('ipilapp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,GET,INQ)
SET AUTHREC +
   PROFILE('MQPD3.TO.MQ70PD1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('EODS.NRSHAS.FLTEVENT.PROD2ETE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EODS.NRSHAS.FLTEVENT.PROD2ETE') +
   GROUP('etl') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,GET,INQ)
SET AUTHREC +
   PROFILE('**') +
   GROUP('apmpoc') +
   OBJTYPE(CLNTCONN) +
   AUTHADD(DSP)
SET AUTHREC +
   PROFILE('**') +
   GROUP('apmpoc') +
   OBJTYPE(QUEUE) +
   AUTHADD(DSP)
SET AUTHREC +
   PROFILE('**') +
   GROUP('apmpoc') +
   OBJTYPE(NAMELIST) +
   AUTHADD(DSP)
SET AUTHREC +
   PROFILE('**') +
   GROUP('apmpoc') +
   OBJTYPE(CHANNEL) +
   AUTHADD(DSP)
*******************************************************************************
* Script ended on 2017-02-14   at 03.20.01 
* Number of Inquiry commands issued: 15 
* Number of Inquiry commands completed: 15 
* Number of Inquiry responses processed: 439 
* QueueManager count: 1 
* Queue count: 88 
* NameList count: 3 
* Process count: 1 
* MQTTChannel count: 2 
* Channel count: 23 
* AuthInfo count: 4 
* Listener count: 2 
* Service count: 1 
* CommInfo count: 1 
* Topic count: 25 
* Subscription count: 13 
* ChlAuthRec count: 3 
* Policy count: 2 
* AuthRec count: 270 
* Number of objects/records: 439 
*******************************************************************************
